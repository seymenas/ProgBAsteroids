@startuml

class GameMaster {
    -int screenWidth;
    -int screenHeight;
    -raylib::Window window;
    -raylib::Texture background_texture;
    -bool game;
    -int lifes;
    -float loseLifeCooldown;
    -float timeSinceLastLifeLost;
    -int score;
    -int statusFontSize;
    -int gameOverFontSize;
    -Spaceship ship;
    -std::vector<Bullet> bullets{};
    -float bulletCooldown;
    -float timeSinceLastShot;
    -std::vector<Asteroid> asteroids{};
    -float asteroidCooldown;
    -float timeSinceLastAsteroid;

    -void createAsteroids();
    -void handleKeyboardInput();
    -void checkColissionAsteroidBullet(std::vector<Bullet>::iterator& bulletIt);
    -void checkColissionAsteroidSpaceship(std::vector<Asteroid>::iterator& asteroidIt);
    -void displayGameOverText();

    +GameMaster();
    +void manageGame();
}

class GameObject {
    #float x;
    #float y;
    #float rotation;
    #double speed;
    #raylib::Texture texture;
    +raylib::Rectangle dest;

    +GameObject();
    +float get_x();
    +float get_y();
    #virtual void move();
    #virtual void draw();
}

class Bullet {
    +Bullet(float start_x, float start_y, float start_direction);
}

class Spaceship {
    +Spaceship();
    +void move(std::string direction);
    +void rotate(std::string direction);
    +Bullet shoot();
}

class Asteroid {
    +Asteroid(int screenWidth, int screenHeight);
    -float scale;
}

Spaceship --|> GameObject
Asteroid --|> GameObject
Bullet --|> GameObject

@enduml